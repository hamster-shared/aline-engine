syntax = "proto3";

option go_package = "./grpc/api";
option java_multiple_files = true;
option java_package = "com.github.hamster-shared.aline";
option java_outer_classname = "AlineProto";

package api;

service AlineRPC {
  rpc AlineChat(stream AlineMessage) returns (stream AlineMessage) {}
}

message AlineMessage {
  // 1: register 客户端发的注册
  // 2: offline 客户端发的注销
  // 3: heartbeat 客户端发的心跳
  // 4: execute 服务端发的执行命令
  // 5: cancel 服务端发的取消执行命令
  // 6: executeResultNotify 客户端发的执行结果通知
  // 7: log 客户端发的日志
  // 8: 错误
  int64 type = 1;

  // registry
  string name = 2;
  string address = 3;

  ExecuteReq execReq = 4;

  // execute result
  string result = 5;

  // log
  string log = 6;

  string error = 7;
}

message ExecuteReq {
  string name = 1;
  // pipeline file
  string pipelineFile = 2;

  // job exec id
  int64 jobDetailId = 3;
}

// message ExecuteResult {
//   string jobDetail = 1;
//   string startTime = 2;
//   int64 duration = 3;
// }

// message Log {
//   string stage = 1;
//   string content = 2;
//   bool more = 3;
// }
