syntax = "proto3";

option go_package = "./grpc/api";
option java_multiple_files = true;
option java_package = "com.github.hamster-shared.aline";
option java_outer_classname = "AlineProto";

package api;

service AlineRPC {
  rpc AlineChat(stream AlineMessage) returns (stream AlineMessage) {}
}

message AlineMessage {
  // 0: register 客户端发的注册
  // 1: offline 客户端发的注销
  // 2: heartbeat 客户端发的心跳
  // 3: execute 服务端发的执行命令
  // 4: cancel 服务端发的取消执行命令
  // 5: executeResultNotify 客户端发的执行结果通知
  // 6: log 客户端发的日志
  // 7: 错误
  // 8: 文件
  MessageType type = 1;

  // registry
  string name = 2;
  string address = 3;

  ExecuteReq execReq = 4;

  // execute result
  ExecuteResult result = 5;

  // log
  string log = 6;

  string error = 7;
  File file = 8;
  JobStatus status = 9;
}

message ExecuteReq {
  string name = 1;
  // pipeline file
  string pipelineFile = 2;

  // job exec id
  int64 jobDetailId = 3;
}

message ExecuteResult {
  string jobName = 1;
  int64 jobID = 2;
  int64 jobStatus = 3;
  string error = 4;
}

// message Log {
//   string stage = 1;
//   string content = 2;
//   bool more = 3;
// }

message File {
  string path = 1;
  bytes data = 2;
}

enum MessageType {
  REGISTER = 0;
  UNREGISTER = 1;
  HEARTBEAT = 2;
  EXECUTE = 3;
  CANCEL = 4;
  RESULT = 5;
  LOG = 6;
  ERROR = 7;
  FILE = 8;
  STATUS = 9;
}

enum JobStatus {
  NOTRUN = 0;
  RUNNING = 1;
  FAIL = 2;
  SUCCESS = 3;
  STOP = 4;
}